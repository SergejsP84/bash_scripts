date +’%D’ > /opt/a_e/d
cat /etc/group | head -2 | tail -1 >> /opt/a_e/e
echo “done”

_________________________

Сделайте файл скрипта, который выполнит:
1 Выведет на экран дату и время
2 напишет “test start” на экране
3 дозапишет в файл logs.log фразу “test passed:”
 * файл должен быть расположен в /etc/drive/testlogs
4 дозапишет в файл logs.log текущее время
5 дозапишет в файл logs.log вывод из файла /opt/temu/root-x86.cfg (стоки с 3-й по 5-ую)
6 Переместит файл logs.log в новый путь /tmp/new
7 выведет на экран “done”

#!/bin/bash
date +'%D/%T'
echo "test start"
mkdir -p /etc/drive/testlogs
echo "test passed:" >> /etc/drive/testlogs/logs.log
date +'%T' >> /etc/drive/testlogs/logs.log
cat /opt/temu/root-x86.cfg | sed -n '3,5p' >> /etc/drive/testlogs/logs.log
mkdir -p /tmp/new
mv /etc/drive/testlogs/logs.log /tmp/new
echo "done"


_______________________

Создайте файл сценария на bash, который будет пинговать 8.8.8.8 десять раз каждые три минуты (после десяти раз нужно сделать разделение строкой, в которой будет написано время и дата:) и отправлять полученные данные в файл ping.log по пути /logs
*скрипт должен работать в фоновом режиме

#!/bin/bash
mkdir -p /logs
while true; do
ping -c 10 8.8.8.8 >> /logs/ping.log
echo "time: $(date +'%T_%D')" >> /logs/ping.log
sleep 180
done &

* 		mkdir -p /logs: Создает каталог /logs с опцией -p, которая позволяет создать каталог, если он не существует.
* 		while true; do: Начинает бесконечный цикл для выполнения пинга.
* 		ping -c 10 8.8.8.8 >> /logs/ping.log: Выполняет пинг на IP-адрес 8.8.8.8 с 10 попытками (-c 10) и добавляет результат в файл лога
* 		echo "Время: $(date)" >> /logs/ping.log: Добавляет разделитель с текущим временем в файл лога с помощью команды date.
* 		sleep 180: Задерживает выполнение скрипта на 180 секунд (3 минуты) перед началом следующей итерации цикла.
* 		&: Запускает скрипт в фоновом режиме, что позволяет вам продолжить работу в том же терминале без ожидания завершения скрипта.


___________________________

Напишите файл сценария на баш, который будет проверять значение в процентах (насколько занят корневой раздел, используя команду df -h). Если значение превышает 90%, то необходимо писать емейл на адрес test@test.com со словами “места мало, блин!”
Скрипт должен запускаться каждые 15 минут в фоновом режиме

#!/bin/bash

# Бесконечный цикл для мониторинга каждые 15 минут
while true; do
    # Запускаем df -h и фильтруем вывод, чтобы получить процент использования корневого раздела
    usage_percentage=$(df -h / | awk 'NR==2 {print $5}' | sed 's/%//')

    # Устанавливаем пороговое значение для предупреждения (90%)
    threshold=90

    # Проверяем, превышает ли использование пороговое значение
    if [ "$usage_percentage" -gt "$threshold" ]; then
        # Если превышено, отправляем электронное письмо
        echo "места мало, блин!" | mail -s "Предупреждение о заполнении корневого раздела" test@test.com
    fi

    # Ждем 15 минут перед следующей проверкой
    sleep 900
done &

Что делают команды и ключи:
* 		while true; do: Начинает бесконечный цикл для мониторинга каждые 15 минут.
* 		df -h /: Выполняет команду df для мониторинга использования корневого раздела. -h означает использование удобного для чтения формата.
* 		awk 'NR==2 {print $5}': Фильтрует вывод df и извлекает процент использования корневого раздела (вторая строка, пятый столбец).
* 		sed 's/%//': Удаляет символ процента из полученного процента, чтобы получить только числовое значение.
* 		threshold=90: Устанавливает пороговое значение в 90%.
* 		if [ "$usage_percentage" -gt "$threshold" ]; then: Проверяет, превышает ли использование пороговое значение.
* 		echo "места мало, блин!" | mail -s "Предупреждение о заполнении корневого раздела" test@test.com: Если использование превышает порог, отправляет электронное письмо с указанным сообщением и темой на адрес test@test.com с использованием mail.
* 		sleep 900: Задерживает выполнение скрипта на 900 секунд (15 минут) перед началом следующей итерации цикла.
* 		&: Запускает скрипт в фоновом режиме, что позволяет ему работать в фоне без блокировки терминала.


___________________________



